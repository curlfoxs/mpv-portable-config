##⇘⇘基本说明：
##对大多数选项加入了中文注释说明
##行首存在注释符"#"，代表此项处于不启用状态（即恢复MPV的默认设置状态），删去即启用
##注释内容解释 —— # <可选值> [条件要求] 参数意义说明 （补充）
##部分选项之间有关联作用，MPV读取参数时由上往下读，所以注意书写通用参数的顺序，可查看手册[02]的顺序逻辑部分的错误示范

 include = "~~/profiles.conf"        # 该参数用于追加读取额外的设置文件。原配置组已被分离到该文件中

 ########
 # 基础 #
 ########
 
 vo                 = gpu            # 视频输出驱动。当前版本默认值即gpu，许多渲染选项也只能在gpu/libmpv下正常工作
 gpu-api            = d3d11          # <opengl/vulkan/d3d11> [SVP补帧时推荐设置为d3d11] 选择图形绘制接口。非特殊情况下win10用户始终应首选d3d11
                                     # opengl是最不推荐选择，vulkan的10bit尚未完全实现 https://github.com/mpv-player/mpv/issues/8554
#gpu-context        = auto           # 选择输出后端。此项通常由 --gpu-api=<value> 自动决定正确值；--gpu-api=opengl 时默认选用 angle ，此时最好改为 win/dxinterop
fbo-format          = rgba16hf       # 内处理精度。此项通常由 --gpu-api=<value> 自动决定正确值，默认首选16位及以上的精度
#d3d11-exclusive-fs  = no            # --gpu-api=d3d11 下的全屏独占
#d3d11-flip         = no             # [通常发生在 --d3d11-exclusive-fs=yes 和 --on-top 一起使用时] 可用于避免MPV全屏时的冻屏问题
                                     # 如果存在上述问题则启用该参数，否则不应该使用，因为d3d11下的翻转模型性能最好
                                     # [当 --gpu-context=angle 也存在全屏冻屏问题时] 用参数 --angle-flip=no 代替 d3d11-flip=no
 hwdec              = d3d11va-copy   # 指定应使用的硬件视频解码API。软解改为 no（默认）。硬解建议使用 d3d11va-copy。10系以上N卡强烈建议使用 nvdec-copy
                                     # --hwdec=auto 等效 --hwdec=yes。当 --gpu-api=d3d11 时，值 auto 首选 d3d11va ；值 auto-copy 首选 dxva2-copy
                                     # 不推荐选用理论上解码效率最高的 无-copy硬解 ，因为要确保尽可能多的其它设置/滤镜/着色器正常作用（有些不支持native模式）
                                     # 在核显&NVDIA_MX_x50这种组合（独显无解码单元）或者在较老的机器上 dxva2-copy 的占用可能远低于 d3d11va-copy
 hwdec-codecs       = all
                                     # 在选定范围内的编码格式尝试硬解，当前版本默认值为 --hwdec-codecs=h264,vc1,hevc,vp8,vp9,av1

#log-file           = "~~desktop/mpv-lazy.log"
                                     # 记录名为"mpv-lazy"的log日志在桌面


##⇘⇘双显卡笔记本的处理

#d3d11-adapter      = "NVIDIA GeForce RTX 2070 Super"
                                     # [当 gpu-api=d3d11 时] 指定某张显卡作为主渲染输出，默认情况下自动选择系统指定的主渲染显卡。
                                     # 显卡名可查看任务管理器自行更改适配。该参数等效在驱动面板中设置以独显运行mpv
                                     # 例如使用I+N的双显笔记本的内屏时，实际使用的是"Intel(R) UHD Graphics"，修改该项示例指定独显可大幅降低任务管理器中双显卡的3d渲染占比
                                     # 大多数双显卡笔记本在外接显示器时，表现类似“独显直连”，此时无需该参数也会自动用独显输出
                                     # [当 gpu-api=vulkan 时] 用参数 --vulkan-device 代替 --d3d11-adapter

 ########
 # 功能 #
 ########

msg-color
msg-module
#fs                    = yes         # --fs 等效 --fullscreen。运行MPV自动进入全屏
#border                = no          # 默认为系统原生窗口界面，启用此项使用无边框界面（去除WINDOWS的窗口装饰）
#window-maximized      = yes         # 运行MPV自动窗口最大化（无边框界面时的最大化类似“无边窗口模式”而非“全屏”）
#ontop                 = yes         # 窗口置顶（当 --gpu-api=vulkan 时也有全屏独占作用）
 hidpi-window-scale    = no          # [推荐设置为no] 是否执行HIDPI缩放，默认yes。MPV支持HIDPI没有实际意义，因为本身不是GUI程序
                                     # 默认值情况下初始化的视频窗口随DPI改变大小，例如在缩放200%的4k的显示器打开800p视频后自动执行2倍缩放变1600p。此外还会影响其它脚本部分内容
 autofit-larger        = 80%x80%     # 窗口模式下最大占屏幕的百分比（例如在FHD屏上打开4k视频初始窗口过大）
 autofit-smaller       = 50%x50%     # 窗口模式下最小占屏幕的百分比（例如在4k屏上打开720p视频初始窗口过小）
#keepaspect            = no          # 默认yes，默认情况下MPV只按源比例拉伸视频。启用此项将始终变形画面至窗口大小
#keepaspect-window     = no          # 默认yes，默认情况下MPV的窗口比例锁定为视频比例。启用此项以实现窗口自由拉伸行为（当 keepaspect=yes 时四周填充黑边）
#panscan               = 1.0         # <0.0-1.0> 裁切横向画面以充满窗口（建议配合 keepaspect-window=no 使用）
#background            = "#778899"   # <格式为(AA)RRGGBB> 更改MPV初启动与播放无视频轨文件时的背景颜色

 pause                 = yes         # 以暂停状态启动播放器
#loop                  = inf         # <N|inf|no> 始终循环播放当前文件
#loop-playlist         = no          # <N|inf|force|no> 播放列表循环
 keep-open             = yes         # <yes|默认no|always> 默认情况下播完列表所有文件MPV自动关闭，设置为 yes 所有播放完毕不退出，设置为 always 可以实现类似“每个文件播完都暂停”的效果
 hr-seek-framedrop     = no          # [SVP补帧时推荐设置为no] 跳转时丢帧，关闭利于修正音频延迟
 save-position-on-quit = yes         # 退出时记住播放状态。缓存目录默认在设置文件夹中的 "watch_later"
#watch-later-options   = vid,aid,sid
                                     # [SVP补帧时推荐设置为留空] 稍后观看的白名单（留空即只保存播放位置）
                                     # 当 --save-position-on-quit=yes 或使用退出时保存到稍后观看的快捷键时，如果不使用白名单，滤镜列表、音量、速率等多个状态也会被保存并在下次启动时恢复

#demuxer-max-bytes     = 200MiB      # 播放网络视频时的向后缓存大小（KiB或MiB）

cursor-autohide-fs-only= yes         # don't autohide the cursor in window mode, only fullscreen
cursor-autohide        = 1000        # autohide the curser after 1s

cache                  = yes
demuxer-max-bytes      = 400MiB
demuxer-max-back-bytes = 150MiB

 #######
 # OSD #
 #######
##⇘⇘OSD 即 On-Screen-Display ，通常为屏幕上弹出显示的信息。 OSC 即 on-screen-controller ，MPV中指的是简易操控界面
#no-osd-bar                     # no osd bar 没有osd进度条
 osd-on-seek      = msg-bar     # <no,bar,msg,msg-bar> 在跳转时间轴时显示的信息类型
#osd-blur         = 0
 osd-bar-w        = 100
 osd-bar-h        = 2
 osd-bar-align-y  = -1
#osd-color        = "#B300FFFF"
#osd-border-color = "#B3008B8B"
 osd-border-size  = 1
 osd-font-size    = 40          # 更改OSD字体大小（全局，影响多个功能显示的文本）（默认值：55）
 osd-fractions    = no          # 以秒为单位显示OSD时间（毫秒精度），有助于查看视频帧的确切时间戳
 osd-playing-msg  = "${filename}"
                                # 开始播放时短暂显示的信息：文件名
 osd-duration     = 1000        # 设置OSD文本信息的持续时间（毫秒）（默认值：1000）



 ########
 # 音频 #
 ########

ao                      = wasapi # win10默认使用WASAPI。如果有其他软件先独占音频通道后，再打开MPV可能会画面会卡顿
audio-device            = auto   # 此项用于指定启动时的音频输出设备
                                 # 改具体值示例 --audio-device="wasapi/{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}"，设备名获取方式见发布页FAQ图文或官方手册
#audio-exclusive        = yes    # 音频通道独占
volume-max              = 200    # <100.0-1000.0> 最大音量。默认值130（130的响度约为100的两倍）
volume                  = 100    # 播放器启动音量。0为静音，默认100
audio-channels          = stereo # 强制多声道音源下混为双声道输出（避免可能的7.1/5.1→2.0声音丢失和音量过小）
audio-pitch-correction  = yes    # [--af=scaletempo/scaletempo2/rubberband 的前置条件] 变速播放时的音调修正，默认开启。自动插入前三项音频滤镜中其一（更多信息见滤镜区）
 audio-file-auto        = fuzzy  # <默认no|exact|fuzzy|all> 自动加载同名外挂音轨（fuzzy为模糊名，exact为精确名）



 ########
 # 视频 #
 ########
##⇘⇘色彩管理
icc-profile-auto             = yes               # 如果做过专业校色应开启（系统目录存在对应的icm校色文档）。未做校色的广色域屏应手动指定 --target-prim=<value>
#icc-profile                 = "X:/xxx/xxxx.icm"
                                                 # 此选项用于加载指定的ICC，与前项不共存
#icc-3dlut-size              = <r>x<g>x<b>       # <2-512> 从ICC配置文件的每个维度生成的3D LUT的大小。默认值为 64x64x64
 icc-cache-dir               = "~~/icc_cache"
                                                 # 指定目录存储和加载从ICC配置文件创建的3D LUT，可以用来加快加载速度。未压缩的LUT的大小取决于 --icc-3dlut-size=<value>

#target-prim                 = auto              # 当不使用ICC颜色管理时，视频颜色将适应此颜色空间
                                                 # 未经校色的广色域屏可设定此参数以解决色彩过饱和的问题。例如99%的argb屏幕写adobe。90%+的p3色域屏写dci-p3（srgb屏无需更改此默认值）
###### Color gamut
# https://github.com/mpv-player/mpv/issues/9071
# Noticed this in the Evangelion 3.333 4K version. Reds look wrong when gamut-clipping is enabled.
gamut-clipping              = no
hdr-compute-peak            = no


##⇘⇘音视频同步模式。只需注释掉 --video-sync=<value> 即可恢复MPV的默认同步模式
# Refresh rate of the monitor (143.856 = 6* 23.976, which is the standard video framerate)
override-display-fps         = 119.88
# 'display-vdrop' is basically the same as 'audio', but with better debugging in Shift+i menu
# Read more about this here: https://mpv.io/manual/master/#options-video-sync
#video-sync                   = display-vdrop
 video-sync                  = display-resample  # 类"ReClock"作用，更改为与视频帧与显示器刷新率同步，自动调节音频速度补偿偏移。
                                                 # 默认值audio（与音频/系统时钟同步）通常兼容性最好但有偶尔的丢帧和重复
 video-sync-max-video-change = 5                 # [仅当 --video-sync=display-xxxx 时生效]
 interpolation               = yes               # [仅当 --video-sync=display-xxxx 时生效] 减少由于视频fps和显示刷新率不匹配而引起的卡顿（也称为抖动）。
 tscale                      = oversample        # [仅开启 --interpolation 时生效] 时间插值算法（非MEMC运动补偿）。
                                                 # oversample是维持源观感的算法（效果类似MADVR的smoothmotion），默认值 mitchell
#profile                     = Tscale-box        # [启用前须先注释 --tscale=<value>] 备选的时间插值算法，具体参数见 "profiles.conf" 中的同名配置组


##⇘⇘“画质”相关
##避免简单粗暴的使用 --profile=gpu-hq ，原因见下方以及手册[02]开头部分
##所有可用的内置算法参见手册 [08] 附录
#profile                     = gpu-hq 
 video-output-levels         = full
###### Luma up (choose FSRCNNX or SSimSuperRes)
# glsl-shader="C:\path\to\mpv\shaders\FSRCNNX_x2_8-0-4-1_LineArt.glsl"   # mathematically best, most expensive
#glsl-shaders                 = "~~/shaders/SSimSuperRes.glsl"            # really good, a little cheaper for the GPU
scale                        = ewa_lanczossharp                          # 放大算法， 默认值bilinear

###### Luma down
#glsl-shaders                  = "~~/shaders/SSimDownscaler.glsl"
dscale                       = mitchell                                  # [使用"SSimDownscaler.glsl"时须锁mitchell] 缩小算法。若不设定，则自动采用 --scale=<value> 的值
linear-downscaling           = no                                        # [使用"SSimDownscaler.glsl"时须关闭；须 --fbo-format 指定16位及以上的精度] （对HDR内容无影响）
correct-downscaling          = yes                                       # [当 --dscale=bilinear 时此项无效] 增强缩小算法的质量，对于异形比例视频可能产生微小失真
#scaler-resizes-only         = no                                        # 默认yes，当未进行缩放处理时，使用bilinear算法完美还原
                                                                         # 禁用时，即使未改变大小，也使用指定的scale值进行处理。这可以修正nnedi3和ravu引入的半像素偏移（但没必要）

###### Chroma up + down
#glsl-shaders                  = "~~/shaders/KrigBilateral.glsl"
cscale                       = mitchell                                  # [使用"KrigBilateral.glsl"最好须锁mitchell]色度还原算法；默认 bilinear
#cscale                      = ewa_lanczossharp                          # 色度还原算法；可由更好的 "KrigBilateral.glsl" 着色器取代。默认 bilinear

###### Sharpen
# Didn't find this too useful with the SuperRes or FSRCNNX shader.
# glsl-shader                = "C:\path\to\mpv\shaders\adaptive-sharpen.glsl"
# linear-upscaling           = no                                        # [须 --fbo-format 指定16位及以上的精度；与 --sigmoid-upscaling 不兼容] （对HDR内容无影响）
# sigmoid-upscaling          = no                                        # [使用"adaptive-sharpen.glsl"时须关闭；与 --linear-upscaling 不兼容] 放大时非线性的颜色转换，可避免强振铃伪影
##开发者建议要么优先使用 --sigmoid-upscaling ，要么以上两项干脆都不用

###### Thinlines
# Very subjective. Currently not using. Refer to the bottom of this post for configuring this.
# glsl-shader="C:\path\to\mpv\shaders\Anime4K_ThinLines_HQ.glsl"

###### Antiring
scale-antiring              = 0.7
dscale-antiring             = 0.7
cscale-antiring             = 0.7

###### Debanding
deband                      = yes                # 去色带。可能受硬解码影响实际效果
deband-iterations           = 4
deband-threshold            = 35
deband-range                = 16
deband-grain                = 4
 dither-depth               = no                 # <N|no|auto> 是否开启色深抖动弥补色彩转换损失。8位显示器写8，10位显示器写10，auto的值取决于 --gpu-api 不一定正确
                                                 # 如果8抖10的显示器使用10存在输出异常的情况，改回值8
#profile                     = DeBand+           # 备选的去色带方案，具体参数见 "profiles.conf" 中的同名配置组

brightness                  = 3



 ####################
 # 脚本 滤镜 着色器 #
 ####################
## SVP4 Manager部分
input-ipc-server      = mpvpipe # [使用SVP Manager时必须开启此项],并且hwdec必须是xxx-cpoy,例如auto-copy
hr-seek-framedrop     = no      # [使用SVP Manager时]This one fixes audio desync 
no-resume-playback              # [使用SVP Manager时]"Watch later" feature is not compatible with SVP 
 
 
 gpu-shader-cache-dir = "~~/shaders_cache"
                                # 在此目录中存储和加载已编译的GLSL着色器缓存，可以提高启动性能。

##以下都可选择在此处开启，即默认每次随播放器启动；或者使用"input.conf"中的方案手动选择加载

##⇘⇘脚本部分

##内置脚本开关（如果没有必要的目的，那就不要屏蔽mpv内建的功能）
#load-auto-profiles      = no   # <yes|no|默认auto> 新版条件配置（使用旧版外挂的用户记得禁用）
#load-osd-console        = no   # 控制台
#load-stats-overlay      = no   # 统计信息
 osc                     = no   # [使用第三方OSC的前置条件] 禁用原OSC（即内置的"osc.lua"脚本）以兼容第三方的界面样式
#ytdl                    = no   # 网址解析增强
#ytdl-raw-options-append = cookies=[D:/cookies.txt]
                                # [当 --ytdl=yes 时有效] 将自定义的选项传递给ytdl https://github.com/ytdl-org/youtube-dl#options
                                # 示例仅为传递单个选项，多个选项最好独立追加，即写多个 --ytdl-raw-options-append 参数 https://mpv.io/manual/master/#options-ytdl-raw-options

#load-scripts         = yes     # 自动挂载/scripts/目录中的所有外置脚本，默认yes。设置为no时可用下一行示例的命令加载指定的外置脚本
#scripts              = "~~/scripts/autoload.lua;~~/scripts/playlistmanager.lua;~~/scripts/open-file-dialog.lua"


##⇘⇘滤镜部分
##设定随MPV启动的音/视频滤镜的书写格式（支持多项） --af/vf=滤镜①=参数❶=值:参数❷=值,滤镜②...
## --af= 和 --vf= 仅能各存在一条。如果不想只使用这条参数，可以拆开写，例如使用 --vf-append 单项多次追加更多的滤镜，并不会覆盖 --vf=<value> 指定的滤镜

##音频变速滤镜三选一（当前默认值已足够好）
#af        = scaletempo=scale=1.0:stride=60:overlap=.20:search=14:speed=tempo
                                # 旧版mpv使用的音频变速滤镜。示例值为默认参数
                                # 其中的 scale=<N> 控制额外视频加速度；stride=<N> 值太高会导致在高速时跳音，低速出现回声，值太低会改变音调，值增大提升性能
                                # overlap=<N> 重叠百分比，值减少提高分离度且提升性能；search=<N> 搜索最佳重叠位置的长度（毫秒），值减少提升性能
                                # speed=<tempo|pitch|both|none> tempo节奏与速度同步，pitch造成卡顿不使用，both同时兼顾节奏与音调，none忽略速度变化不使用
#af        = scaletempo2=min-speed=0.25:max-speed=4.0:search-interval=30:window-size=20
                                # 此项参数为变速播放时默认自动激活的音频滤镜。在 min/max-speed=<N> 此速度范围外直接静音处理。scaletempo2具有更高的音频质量
#af        = rubberband
                                # 声音质量介于scaletempo和scaletempo2之间。可调节的细参众多，详情见官方文档，这里直接使用默认参数

#vf-append = format=gamma=gamma2.2
                                # MPV校色曲线目标是BT.1886，此视频滤镜用于回归常见的显示器标准 https://github.com/mpv-player/mpv/issues/8009
#vf-append = fps=fps=60/1.001
                                # 强制视频以指定帧率输出（此项与补帧冲突），通常被用于增强滚动弹幕的平滑性，不推荐使用 --sub-fps=<value> 。分子数值（取整）为你的显示器刷新率。
##VS脚本实际以视频滤镜的形式在MPV中工作。补帧滤镜只能启用一个，且不与SVP一起使用（建议编辑源文件参数以适配实际机器）
#vf-append = vapoursynth="~~/mvtools-standard.vpy"
                                # mvtools补帧脚本标准版
#vf-append = vapoursynth="~~/svpflow-2x.vpy"
                                # 通过svpflow实现的补帧脚本动漫版（非SVP Manager程序）


##⇘⇘着色器部分
##此处的 --glsl-shaders=<value> 用于指定每次随MPV共同启动的着色器（支持多项）。更多详细着色器信息参见手册[01]
##--glsl-shaders-append 等效 --glsl-shader=<value> （注意和上行说明中参数的区别），表示追加着色器（单次仅能追加一项），并不会覆盖第一条 --glsl-shaders=<value> 指定的着色器，可无限追加该命令。

##初始加载多个着色器的示例写法
#glsl-shaders         = "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_Moderate_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl"

#glsl-shaders-append  = "~~/shaders/SSimDownscaler.glsl"
                                # [与 --dscale=mitchell 和 --linear-downscaling=no 一起使用] 对MPV的内置缩小算法增强
#glsl-shaders-append  = "~~/shaders/adaptive-sharpen.glsl"
                                # [与 --sigmoid-upscaling=no 一起使用] 自适应锐化

## 使用"Anime4K: Mode B+B (HQ)
# glsl-shaders          = "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Restore_CNN_Soft_S.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl"
# glsl-shaders     = "~~/shaders/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K_Restore_CNN_M.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_M.glsl;~~/shaders/Anime4K_AutoDownscalePre_x2.glsl;~~/shaders/Anime4K_AutoDownscalePre_x4.glsl;~~/shaders/Anime4K_Upscale_CNN_x2_S.glsl"
glsl-shaders-append   = "~~/shaders/KrigBilateral.glsl"
glsl-shaders-append   = "~~/shaders/SSimDownscaler.glsl"
glsl-shaders-append   = "~~/shaders/SSimSuperRes.glsl"

 ##############
 # 语言 & 字幕 #
 #############
 sub-visibility                 = yes
 sub-auto                       = fuzzy # 自动加载当前播放文件的同名外挂字幕
#sub-file-paths                 = sub;subtitles;字幕;C:/字幕库
                                        # 在指定的额外目录中寻找匹配的字幕。支持相对和绝对路径，示例即自动搜索当前文件路径下名为"sub","subtitles","字幕"和C盘的"字幕库"文件夹内
 slang                          = chs,sc,zh,chi,zho
                                        # 字幕首选语言为中文，但MPV优先加载外挂轨道，此项参数可能实际用处不大
 sub-font                       = "SimSun" #"YouYuan"
                                        # 指定纯文本字幕的默认字体
                                        # 该参数本应对ASS字幕无效，实际影响了ASS的缺省默认字体 https://github.com/mpv-player/mpv/issues/8637
 sub-font-size                  = 50
#blend-subtitles                = video # <yes|video|默认no> 在插值和颜色管理之前，将字幕混合到视频帧上。值video类似于yes，但是以视频的原始分辨率绘制字幕，并与视频一起缩放
                                        # 启用此功能会将字幕限制在视频的可见部分（不能出现在视频下方的黑色空白处）
                                        # 还会让字幕受 --icc-profile --target-prim --target-trc --interpolation --gamma-factor --glsl-shaders 的影响
                                        # 与 --interpolation 一起使用时，可提高字幕渲染性能
 sub-ass-force-margins          = yes   # [当 --blend-subtitles=yes/video 时无效] 使ASS字幕尽可能输出在黑边上
#sub-use-margins                = no    # 是否使纯文本字幕输出在黑边上，默认yes
#stretch-image-subs-to-screen   = yes   # 强制拉伸图形字幕到缩放分辨率而不是参考视频分辨率，可以使PGS实现输出在黑边的效果，可能破坏显示效果

##⇘⇘模拟vsfilter相关
##默认情况下libass和vsfilter渲染的字幕存在部分差异，以下选项可用于使视觉效果相近
#sub-ass-force-style            = ScaledBorderAndShadow=no
                                        # 强制样式：不缩放边框和阴影。可防止所谓的“重墨”风格 https://github.com/libass/libass/issues/287
                                        # 该行为可能违背创作者意图，建议使用快捷键方案手动触发
#sub-ass-vsfilter-aspect-compat = yes   # 播放非常规比例视频时拉伸ASS字幕来模仿传统的vsfilter行为，默认开启
#sub-ass-vsfilter-blur-compat   = yes   # 通过视频分辨率而不是.ass指定的分辨率缩放"\blur"标签，默认开启



 ########
 # 截图 #
 ########
##⇘⇘以下预设参数只是为了截取最高质量的图片（高质量截图处理效率较低）

 screenshot-format             = png  # <默认 jpg|png|webp>
#screenshot-jpeg-quality       = 100  # <0-100> JPEG的最高质量，默认为90
#screenshot-jpeg-source-chroma = yes  # 用与源视频相同的色度半采样写入JPEG，默认yes
 screenshot-png-compression    = 5    # <0-9> PNG压缩等级，过高的等级影响性能，默认为7
#screenshot-png-filter         = 5    # <0-5> PNG的压缩过滤器。默认5即可实现最佳压缩率
#screenshot-webp-lossless      = yes  # 无损WEBP，默认no
#screenshot-webp-quality       = 100  # 此项数值仅在 --screenshot-webp-lossless=no 时生效
#screenshot-webp-compression   = 3    # WEBP压缩等级，使用有损WEBP时进一步降低图片质量，默认为4 <0-6>

 screenshot-tag-colorspace     = yes  # 使用适当的色彩空间标记屏幕截图（并非所有格式受支持）默认no
#screenshot-high-bit-depth     = yes  # 主要影响PNG，尽可能使用和视频输出时相同的位深，默认yes
 screenshot-template           = "~~desktop/MPV-%f-%wH.%wM.%wS.%wT-#%#00n"
                                      # [若直接在模板中设置路径，此时无需 --screenshot-directory ] 截图命名模板： https://mpv.io/manual/master/#options-screenshot-template
#screenshot-directory          = "~~desktop/"
                                      # 保存截图在桌面



 ########
 # 其它 #
 ########

#d3d11-output-csp              = pq # [须 --gpu-api=d3d11] 此项参数用于直出HDR，且不支持条件配置会影响sdr播放。
                                    # 当前版本需先手动打开win10 OS HDR，再打开MPV后全屏开始播放

